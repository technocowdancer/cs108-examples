# Copy and paste your work, or start typing.

new_dict = {}
new_dict["key"] = "value"
#new_dict = {"key" : "value"}
new_dict["key"] += "s"
#new_dict = {"key" : "values"}

new_dict["key"]
# "value"

dict = {1:3, 2:5, 3:6, 4:7}
sorted(list(new_dict.keys())) = [1,2,3,4]
new_dict.values() = [3,5,6,7]
# you can only look up values by using the key, you can use keys to find value, you cannot use values to find keys
# but once it is an item, you can index for the key 
new_dict.items() = [(1,3),(2,5),(3,6),(4,7)]
## cannot put another dic or list as keys, but can be values
## keys must be inmutable


#given a dictionary l maps first name to last name, get new dict that maps last name to first name
l = {"Joe": "Smith", "Alice": "Green", "Carl": "Black"}  

new_dic = {}
for key in l:
  new_dic[l[key]] = key
  return new_dic

l=[1,2,1,3,4,2]
{1:2, 2:2, 3:1, 4:1}

# key = number, value = time it repreats itself

num_repeated = {}
for element in l:
  if element not in num_repeated:
    num_repeated[element] = 1 # value has to be at least 1
  if element in num_repeated:
    num_repeated[element] += 1
return num_repeated


# match each word with how long it is
# how_long = {hello : 5, ...}
s = "hello how are you"

words = s.split(' ')
how_long = {}
for word in words
	how_long[word]= len(word)
return how_long

l=[[1,2,3],[4,5,6],[1,2,3],[7,8,9]]
l[0] = [1,2,3]
#{0:[1,2,3], 1:[4,5,6], 2:[1,2,3]}
 # return dictionary where key = index and the value is the list
 
indexed = {}
key = 0
for list in l:
  indexed[key] = list
  key += 1
return indexed 
    
  OR
  
indexed = {}
for list in range(len(l)):
  indexed[list] = l[list]
return indexed 

## Give a list using the dictionary that has all of the values multiplied by eachother
mwhaha = {1:2, 3:4, 5:5}
[2, 12, 25]
*edit the dictionary so that value is modified
*turn it into a list using .values
epic = {}
for key in mwhaha:
  epic[key] = mwhaha[key] * key 
return epic.values()

epic = []
for key in mwhaha:
  epic += [mwhaha[key] * key]
return epic